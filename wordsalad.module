<?php

/**
 *
 */
function wordsalad_entity_postinsert($entity, $entity_type)
{
  if ($entity_type == 'node') {
    if ($entity->type == 'writing365') {
      // End point

      $url = variable_get('wordsalad_api_url');

      /*
       * !! IMPORTANT !!
       * Contact NathanHealea for Endpoint of connection
       * March 4th, 2016 a public url has not been created.
       */
      $endpoint = $url . $entity->nid;

      // Initializing Curl
      $curl = curl_init();

      // Setting Curl options
      curl_setopt($curl, CURLOPT_HTTPHEADER, array('Accept: application/json'));

      // Will return the response , if false it print the response
      curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);

      // Set the url
      curl_setopt($curl, CURLOPT_URL, $endpoint);

      // Executing the request to WordSalad
      $result = curl_exec($curl);

      // Closing the cURL request
      curl_close($curl);

      // Decoding JSON results from WordSalad
      $data = json_decode($result);

      // Check if an error was sent back.
      if (array_key_exists('error', $data)) {

        // Logg the error that was received from the WordSalad service.
        watchdog('writing365', 'WordSalad Error: NodeId: %nodeId, Error: %error, Message: %mesage', array(
          '%nodeId' => $entity->nid,
          '%error' => $data->error,
          '%message' => $data->message
        ),
          WATCHDOG_ERROR);

      } else { // if no error was received then store results.

        // checking to make sure actual data was return.
        if (isset($data->is_wordsalad)) {

          // Store results in database
          db_insert('wordsalad_score')->fields(array(
            'nid' => $entity->nid,
            'is_wordsalad' => $data->is_wordsalad,
            'percent' => $data->percent,
            'score' => $data->score,
          ))->execute();

        }
      }
    }
  }
}

/**
 *
 */
function wordsalad_entity_postupdate($entity, $entity_type)
{
  if ($entity_type == 'node') {
    if ($entity->type == 'writing365') {

      $url = variable_get('wordsalad_api_url');

      /*
       * !! IMPORTANT !!
       * Contact NathanHealea for Endpoint of connection
       * March 4th, 2016 a public url has not been created.
       */
      $endpoint = $url . $entity->nid;

      // Initializing Curl
      $curl = curl_init();

      // Setting Curl options
      curl_setopt($curl, CURLOPT_HTTPHEADER, array('Accept: application/json'));

      // Will return the response , if false it print the response
      curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);

      // Set the url
      curl_setopt($curl, CURLOPT_URL, $endpoint);

      // Executing the request to WordSalad
      $result = curl_exec($curl);

      // Closing the cURL request
      curl_close($curl);

      // Decoding JSON results from WordSalad
      $data = json_decode($result);

      // Check if an error was sent back.
      if (array_key_exists('error', $data)) {

        // Logg the error that was received from the WordSalad service.
        watchdog('writing365', 'WordSalad Error: NodeId: %nodeId, Error: %error, Message: %mesage', array(
          '%nodeId' => $entity->nid,
          '%error' => $data->error,
          '%message' => $data->message
        ),
          WATCHDOG_ERROR);

      } else { // if no error was received then store results.

        // checking to make sure actual data was return.
        if (isset($data->is_wordsalad)) {

          // Store results in database
          db_insert('wordsalad_score')->fields(array(
            'nid' => $entity->nid,
            'is_wordsalad' => $data->is_wordsalad,
            'percent' => $data->percent,
            'score' => $data->score,
          ))->execute();

        }
      }
    }
  }
}

/**
 * Implements hook_menu().
 * Added 3-2-16
 */
function wordsalad_menu()
{
  $items['wordsalad'] = array(
    'title' => 'WordSalad Summary Admin',
    'page callback' => 'wordsalad_page_info_last',
    'access arguments' => array('administer wordsalad'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'wordsalad.pages.inc'
  );
  $items['wordsalad/%user_uid_optional'] = array(
    'title' => 'WordSalad Summary',
    'page callback' => 'wordsalad_page_info',
    'page arguments' => array(1),
    'access callback' => 'wordsalad_check_permission',
    'access arguments' => array(1),
    'file' => 'wordsalad.pages.inc'
  );
  $items['admin/config/services/wordsalad'] = array(
    'title' => 'WordSalad API URL',
    'description' => 'Configure WordSalad settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wordsalad_admin_form'),
    'access arguments' => array('administer wordsalad'),
  );
  return $items;
}

/**
 * Implements hook_block_info().
 */
function wordsalad_block_info()
{
  $block ['recent'] = array(
    'info' => t('Recent journal entries (WS)'),
    'properties' => array(
      'administrative' => TRUE,
    ),
  );
  return $block;
}

/**
 * Implements hood_Permission()
 */
function wordsalad_permission()
{
  return array(
    'administer wordsalad' => array(
      'title' => t('Administer WordSalad'),
      'description' => t('Preforms administeration task for WordSalad')
    ),
    'view wordsalad information' => array(
      'title' => t('View WordSalad Information'),
      'description' => t('Can see users own wordsalad information')
    )
  );

}

/**
 * Implements hook_block_configure()
 */
function wordsalad_block_configure($delta = '')
{
  if ($delta == 'recent') {
    $form ['wordsalad_block_count'] = array(
      '#type' => 'select',
      '#title' => t('Number of recent journal entries to display'),
      '#default_value' => variable_get('wordsalad_block_count', 10),
      '#options' => drupal_map_assoc(array(
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        25,
        30
      )),
    );
  }
  return $form;
}

/**
 * Implements hook_form()
 */
function wordsalad_admin_form()
{
  /*$form = array();*/

  $current_url = variable_get('wordsalad_api_url');
  if (!is_null($current_url)) {
    $form['wordsalad_api_url'] = array(
      '#type' => 'textfield',
      '#title' => 'WordSalad API URL ',
      '#description' => 'Endpoint for WordSalad API URL. <br/> <strong>Current URL: </strong>' . $current_url,
      '#required' => TRUE,
    );
  } else {
    $form['wordsalad_api_url'] = array(
      '#type' => 'textfield',
      '#title' => 'WordSalad API URL ',
      '#description' => 'Endpoint for WordSalad API URL. <br/> <strong>Current URL: </strong>' . $current_url,
      '#required' => TRUE,
    );
  }


  /*if(!is_null($current_url)){
    $form['current'] = "Current Url: " . $current_url;
  }
  else{
    $form['current'] = "Current Url: ";
  }*/


  $form['modules'] = array();

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save configuration'),
  );


  return system_settings_form($form);
}

function wordsalad_check_permission($account)
{
  return $account->uid && user_access('view wordsalad information') && (user_access('view wordsalad information', $account));
}


?>